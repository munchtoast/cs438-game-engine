# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml

# use the official gcc image, based on debian
# can use versions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

image: gcc

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - precommit
  - buildtest

before_script:
 - apt-get update --yes
 - apt-get install --yes cmake python3 pip python3.11-venv

precommit:
  stage: precommit
  script:
    - python3 -m venv .venv
    - source .venv/bin/activate
    - python3 -m pip install pre-commit
    - pre-commit install
    - pre-commit run --all-files

build:
  stage: buildtest
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  # before_script:
  #   - apt update && apt -y install make autoconf
  script:
    - mkdir build
    - cd build
    - cmake .. -D BUILD_TESTING=ON
    - cmake --build .
    - ctest
